import { ProjectionGrid, Projection } from './projections';
import { Domain, Bounds, Center, IndexAndFractions } from '../types';
export declare const degreesToRadians: (degree: number) => number;
export declare const radiansToDegrees: (rad: number) => number;
export declare const tile2lon: (x: number, z: number) => number;
export declare const tile2lat: (y: number, z: number) => number;
export declare const lon2tile: (lon: number, z: number) => number;
export declare const lat2tile: (lat: number, z: number) => number;
export declare const fastAtan2: (y: number, x: number) => number;
export declare const hermite: (t: number, p0: number, p1: number, m0: number, m1: number) => number;
export declare const derivative: (fm1: number, fp1: number) => number;
export declare const secondDerivative: (fm1: number, f0: number, fp1: number) => number;
export declare const getIndexFromLatLong: (lat: number, lon: number, dx: number, dy: number, nx: number, latLonMinMax: [minLat: number, minLon: number, maxLat: number, maxLon: number]) => IndexAndFractions;
export declare const getIndicesFromBounds: (south: number, west: number, north: number, east: number, domain: Domain) => [minX: number, minY: number, maxX: number, maxY: number];
export declare const getRotatedSWNE: (domain: Domain, projection: Projection, [south, west, north, east]: [number, number, number, number]) => [localSouth: number, localWest: number, localNorth: number, localEast: number];
export declare const getBorderPoints: (projectionGrid: ProjectionGrid) => number[][];
export declare const getBoundsFromGrid: (lonMin: number, latMin: number, dx: number, dy: number, nx: number, ny: number) => Bounds;
export declare const getBoundsFromBorderPoints: (borderPoints: number[][], projection: Projection) => Bounds;
export declare const getCenterFromBounds: (bounds: Bounds) => Center;
export declare const getCenterFromGrid: (grid: Domain["grid"]) => Center;
export declare const rotatePoint: (cx: number, cy: number, theta: number, x: number, y: number) => number[];
